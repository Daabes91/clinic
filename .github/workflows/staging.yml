name: Staging Deploy

on:
  push:
    branches:
      - main

env:
  PNPM_VERSION: 8

jobs:
  staging_web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - run: pnpm install --frozen-lockfile
      - run: pnpm --filter web build
      - name: Deploy to Vercel (staging)
        run: |
          pnpm dlx vercel deploy \
            --cwd apps/web \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --scope ${{ secrets.VERCEL_ORG_ID }} \
            --project ${{ secrets.VERCEL_WEB_PROJECT_ID }} \
            --env=STAGING=true

  staging_admin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - run: pnpm install --frozen-lockfile
      - run: pnpm --filter admin build
      - name: Deploy to Vercel (staging)
        run: |
          pnpm dlx vercel deploy \
            --cwd apps/admin \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --scope ${{ secrets.VERCEL_ORG_ID }} \
            --project ${{ secrets.VERCEL_ADMIN_PROJECT_ID }} \
            --env=STAGING=true

  staging_api:
    runs-on: ubuntu-latest
    needs:
      - staging_web
      - staging_admin
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1
      - name: Deploy staging API
        run: |
          flyctl deploy \
            --config apps/api/fly.staging.toml \
            --app ${{ secrets.FLY_STAGING_APP_NAME }} \
            --dockerfile apps/api/Dockerfile \
            --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
